[2022-09-14 08:33:36,755] {evaluation.py:79} INFO - 1/10
[2022-09-14 08:33:36,755] {evaluation.py:29} INFO - RenderedWB_Set1/NikonD40_0011_D_D2
[2022-09-14 08:33:37,273] {__init__.py:241} DEBUG - (private) matplotlib data path: C:\Users\dranh\anaconda3\lib\site-packages\matplotlib\mpl-data
[2022-09-14 08:33:37,273] {__init__.py:241} DEBUG - matplotlib data path: C:\Users\dranh\anaconda3\lib\site-packages\matplotlib\mpl-data
[2022-09-14 08:33:37,279] {__init__.py:241} DEBUG - CONFIGDIR=C:\Users\dranh\.matplotlib
[2022-09-14 08:33:37,283] {__init__.py:1480} DEBUG - matplotlib version 3.3.4
[2022-09-14 08:33:37,284] {__init__.py:1481} DEBUG - interactive is False
[2022-09-14 08:33:37,284] {__init__.py:1482} DEBUG - platform is win32
[2022-09-14 08:33:37,285] {__init__.py:1483} DEBUG - loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'mpl_toolkits', 'pywin32_bootstrap', 'ruamel', 'sphinxcontrib', 'zope', 'site', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'posixpath', 'fnmatch', 'glob', '_ctypes', '_struct', 'struct', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'textwrap', 'math', '_datetime', 'datetime', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'errno', 'urllib', 'urllib.parse', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'signal', '_weakrefset', 'threading', 'msvcrt', '_winapi', 'subprocess', 'platform', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'weakref', 'numpy.lib.format', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', '_decimal', 'decimal', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_21', 'numpy.random._common', 'binascii', 'base64', '_hashlib', '_blake2', 'hashlib', 'hmac', '_bisect', 'bisect', '_random', '_sha512', 'random', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'copy', 'cv2.load_config_py3', 'cv2.version', 'cv2.Error', 'cv2.cuda', 'cv2.detail', 'cv2.dnn', 'cv2.fisheye', 'cv2.flann', 'cv2.gapi.core', 'cv2.gapi.core.cpu', 'cv2.gapi.core.fluid', 'cv2.gapi.core.ocl', 'cv2.gapi.ie', 'cv2.gapi.ie.detail', 'cv2.gapi.oak', 'cv2.gapi.onnx', 'cv2.gapi.own', 'cv2.gapi.own.detail', 'cv2.gapi.render', 'cv2.gapi.render.ocv', 'cv2.gapi.streaming', 'cv2.gapi.video', 'cv2.gapi.wip', 'cv2.gapi.wip.draw', 'cv2.gapi.wip.gst', 'cv2.gapi.wip.onevpl', 'cv2.ipp', 'cv2.ml', 'cv2.ocl', 'cv2.ogl', 'cv2.parallel', 'cv2.samples', 'cv2.segmentation', 'cv2.utils.fs', 'cv2.utils.nested', 'cv2.videoio_registry', 'cv2.data', 'cv2.gapi', 'cv2.mat_wrapper', 'cv2.misc.version', 'cv2.misc', 'cv2.utils', 'cv2', 'evaluation', 'evaluation.get_metadata', 'skimage._shared', 'skimage._shared.version_requirements', 'skimage._shared.geometry', 'skimage.util.dtype', 'skimage.util.shape', 'skimage.util.noise', 'skimage.util.apply_parallel', 'skimage.util.arraycrop', 'skimage.util.compare', 'skimage.util._regular_grid', 'skimage.util.unique', 'skimage.util._invert', 'skimage.util._montage', '_cython_0_29_23', 'skimage.util._remap', 'skimage.util._map_array', 'skimage.util', 'distutils', 'distutils.version', 'skimage.data._binary_blobs', 'skimage.data._registry', 'skimage.data', 'skimage.util.lookfor', 'skimage', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', '_cython_0_29_24', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'skimage.color.colorconv', 'skimage._shared._warnings', 'skimage._shared.utils', 'skimage.color.rgb_colors', 'skimage.color.colorlabel', 'skimage.color.delta_e', 'skimage.color', 'evaluation.calc_deltaE', 'evaluation.calc_deltaE2000', 'evaluation.calc_mse', 'evaluation.calc_mae', 'evaluation.evaluate_cc', 'traceback', '_string', 'string', 'atexit', 'logging', 'torch._utils', 'tempfile', 'torch._utils_internal', 'torch.version', 'torch.torch_version', 'torch._six', '_socket', 'select', 'selectors', 'socket', 'torch._C._onnx', 'torch._C._jit', 'torch._C._jit_tree_views', 'torch._C._te', 'torch._C._monitor', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch._C._fft', 'torch._C._linalg', 'torch._C._nn', 'torch._C._return_types', 'torch._C._sparse', 'torch._C._special', 'torch._namedtensor_internals', '__future__', 'torch.overrides', 'torch.utils.throughput_benchmark', 'torch.utils._crash_handler', 'torch.utils', 'torch.utils.hooks', 'torch._tensor', 'torch.types', 'torch.storage', 'torch.random', 'difflib', 'tarfile', 'torch._sources', 'torch.serialization', 'torch._tensor_str', 'torch.autocast_mode', 'torch.cuda._utils', 'gc', 'torch.cuda.graphs', 'torch.cuda.streams', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.amp.autocast_mode', 'torch.cuda.amp.common', 'torch.cuda.amp.grad_scaler', 'torch.cuda.amp', 'torch.cuda', 'torch.sparse', 'torch.nn.parameter', 'torch.nn.modules.module', 'torch._VF', 'torch._torch_docs', 'torch._C._distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch.distributed.distributed_c10d', 'torch.distributed.remote_device', 'torch.distributed', 'torch.distributed.rpc', 'torch.futures', 'torch.package.analyze.trace_dependencies', 'torch.package.analyze', 'torch.package._mangling', 'torch.package.analyze.is_from_package', 'torch.package.glob_group', 'torch.package.file_structure_representation', 'torch.package.importer', 'pickletools', 'dataclasses', 'torch.package._digraph', 'torch.package._importlib', 'torch.package._package_pickler', 'torch.package._stdlib', 'torch.package.find_file_dependencies', 'torch.package.package_exporter', 'torch.package._directory_reader', 'torch.package._package_unpickler', 'torch.package.package_importer', 'torch.package', 'torch._jit_internal', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch.nn.functional', 'torch.nn.init', 'typing_extensions', 'torch.nn.modules.lazy', 'torch.nn.modules.linear', 'torch.nn.common_types', 'torch.nn.modules.conv', 'torch.nn.modules.activation', 'torch.nn.modules.distance', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.autograd.variable', 'torch.autograd.function', 'cmath', 'torch.testing._core', 'torch.testing._comparison', 'torch.testing._creation', 'torch.testing._legacy', 'torch.testing._deprecated', 'torch.testing', 'torch.utils._pytree', 'torch._vmap_internals', 'torch.autograd.gradcheck', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.forward_ad', 'torch.autograd.functional', 'torch.autograd.graph', 'torch._C._autograd', 'torch.autograd.profiler_util', 'torch.autograd.profiler', 'torch.autograd', 'torch.nn.modules._functions', 'torch.nn.modules.batchnorm', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.utils.parametrize', 'torch.nn.utils.parametrizations', 'torch.nn.utils.init', 'torch.nn.utils', 'torch.nn.modules.rnn', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.modules.channelshuffle', 'torch.nn.modules', 'torch.nn.parallel.parallel_apply', 'torch.cuda.nccl', 'torch.nn.parallel.comm', 'torch.nn.parallel.replicate', 'torch.nn.parallel._functions', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel.data_parallel', 'torch.distributed.algorithms.join', 'torch.distributed.algorithms', 'torch.nn.parallel.distributed', 'torch.nn.parallel', 'torch.nn', 'torch._linalg_utils', 'torch._lowrank', 'torch.functional', 'torch.cpu.amp.autocast_mode', 'torch.cpu.amp', 'torch.cpu', 'torch.fft', 'torch.nn.intrinsic.modules.fused', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic', 'torch.nn.quantized.modules.utils', 'torch.jit._monkeytype_config', 'torch.jit._state', 'torch._ops', 'torch.jit.annotations', 'six', 'six.moves', 'astunparse.unparser', 'astunparse.printer', 'astunparse', 'torch.jit.frontend', 'torch.backends', 'torch.backends.cudnn', 'torch.jit._builtins', 'torch.jit._check', 'torch.jit._recursive', 'torch.jit._fuser', 'torch.jit._serialization', 'torch._classes', 'torch.distributed.autograd', 'torch.jit._script', 'torch.jit._trace', 'torch.jit._async', 'torch.jit._freeze', 'torch.jit', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.modules.dropout', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.normalization', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.qat.modules.embedding_ops', 'torch.nn.qat.modules', 'torch.nn.qat', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat', 'torch.nn.quantized.modules.conv', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.embedding_ops', 'torch.nn.quantized.modules.functional_modules', 'torch.nn.quantized.modules', 'torch.nn.quantized', 'torch.nn.quantizable.modules.activation', 'torch.nn.quantizable.modules.rnn', 'torch.nn.quantizable.modules', 'torch.nn.quantizable', 'torch.ao', 'torch.optim._functional', 'torch.optim.optimizer', 'torch.optim.adadelta', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.radam', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.nadam', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.optim.swa_utils', 'torch.optim', 'torch.optim._multi_tensor.adam', 'torch.optim._multi_tensor.adamw', 'torch.optim._multi_tensor._functional', 'torch.optim._multi_tensor.nadam', 'torch.optim._multi_tensor.sgd', 'torch.optim._multi_tensor.radam', 'torch.optim._multi_tensor.rmsprop', 'torch.optim._multi_tensor.rprop', 'torch.optim._multi_tensor.asgd', 'torch.optim._multi_tensor.adamax', 'torch.optim._multi_tensor.adadelta', 'torch.optim._multi_tensor.adagrad', 'torch.optim._multi_tensor', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', 'multiprocessing.util', 'multiprocessing.resource_sharer', 'torch.multiprocessing.reductions', '_multiprocessing', 'multiprocessing.connection', 'torch.multiprocessing.spawn', 'torch.multiprocessing', 'torch.special', 'torch.utils.backcompat', 'torch.onnx', 'torch.linalg', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'zipfile', 'urllib.response', 'urllib.error', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', 'nturl2path', 'urllib.request', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'colorama.ansi', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'unicodedata', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'tqdm.asyncio', 'tqdm.auto', 'torch.hub', 'torch.distributions.constraints', 'torch.distributions.utils', 'torch.distributions.distribution', 'torch.distributions.exp_family', 'torch.distributions.bernoulli', 'torch.distributions.dirichlet', 'torch.distributions.beta', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.gamma', 'torch.distributions.chi2', 'torch.distributions.transforms', 'torch.distributions.constraint_registry', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.uniform', 'torch.distributions.independent', 'torch.distributions.transformed_distribution', 'torch.distributions.gumbel', 'torch.distributions.half_cauchy', 'torch.distributions.normal', 'torch.distributions.half_normal', 'torch.distributions.laplace', 'torch.distributions.multivariate_normal', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.kl', 'torch.distributions.kumaraswamy', 'torch.distributions.lkj_cholesky', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributions.weibull', 'torch.distributions.wishart', 'torch.distributions', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.utils.data.sampler', 'torch.utils.data._typing', 'torch.utils.data.dataset', '_queue', 'queue', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.utils.data._utils', 'torch.utils.data.graph', 'torch.utils.data.graph_settings', 'torch.utils.data.dataloader', 'torch.utils.data.distributed', 'torch.utils.data._decorator', 'torch.utils.data.backward_compatibility', 'torch.utils.data.communication.eventloop', 'torch.utils.data.communication.iter', 'torch.utils.data.communication.map', 'torch.utils.data.communication.messages', 'torch.utils.data.communication.protocol', 'torch.utils.data.communication.queue', 'torch.utils.data.communication', 'torch.utils.data.datapipes.iter.utils', 'torch.utils.data.datapipes.utils', 'torch.utils.data.datapipes.utils.common', 'torch.utils.data.datapipes.iter.callable', 'torch.utils.data.datapipes.iter.combinatorics', 'torch.utils.data.datapipes.iter.combining', 'torch.utils.data.datapipes.iter.filelister', 'torch.utils.data.datapipes.iter.fileopener', 'torch.utils.data.datapipes.iter.grouping', 'torch.utils.data.datapipes.utils.decoder', 'torch.utils.data.datapipes.iter.routeddecoder', 'torch.utils.data.datapipes.dataframe.structures', 'torch.utils.data.datapipes.dataframe.dataframes', 'torch.utils.data.datapipes.dataframe.dataframe_wrapper', 'torch.utils.data.datapipes.dataframe.datapipes', 'torch.utils.data.datapipes.dataframe', 'torch.utils.data.datapipes.iter.selecting', 'torch.utils.data.datapipes.iter.streamreader', 'torch.utils.data.datapipes.iter', 'torch.utils.data.datapipes.map.callable', 'torch.utils.data.datapipes.map.combinatorics', 'torch.utils.data.datapipes.map.combining', 'torch.utils.data.datapipes.map.grouping', 'torch.utils.data.datapipes.map.utils', 'torch.utils.data.datapipes.map', 'torch.utils.data.datapipes', 'torch.utils.data.dataloader_experimental', 'torch.utils.data', 'torch.__config__', 'torch.__future__', 'gzip', 'torch.profiler.profiler', 'torch.profiler', 'torch._tensor_docs', 'torch._storage_docs', 'torch.ao.quantization.quant_type', 'torch.ao.quantization.utils', 'torch.ao.quantization.observer', 'torch.ao.quantization.fake_quantize', 'torch.ao.quantization.fuser_method_mappings', 'torch.ao.quantization.fuse_modules', 'torch.ao.quantization.qconfig', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.intrinsic.quantized.modules.bn_relu', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.nn.quantized.dynamic.modules.conv', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic', 'torch.nn.intrinsic.quantized.dynamic.modules.linear_relu', 'torch.nn.intrinsic.quantized.dynamic.modules', 'torch.nn.intrinsic.quantized.dynamic', 'torch.nn.quantized._reference.modules.utils', 'torch.nn.quantized._reference.modules.linear', 'torch.nn.quantized._reference.modules.conv', 'torch.nn.quantized._reference.modules', 'torch.nn.quantized._reference', 'torch.nn.qat.dynamic.modules.linear', 'torch.nn.qat.dynamic.modules', 'torch.nn.qat.dynamic', 'torch.ao.nn.sparse.quantized.linear', 'torch.ao.nn.sparse.quantized.utils', 'torch.ao.nn.sparse.quantized.dynamic.linear', 'torch.ao.nn.sparse.quantized.dynamic', 'torch.ao.nn.sparse.quantized', 'torch.ao.nn.sparse', 'torch.ao.nn', 'torch.ao.quantization.stubs', 'torch.ao.quantization.quantization_mappings', 'torch.ao.quantization.quantize', 'torch.ao.quantization.quantize_jit', 'torch.ao.quantization', 'torch.quantization.quantize', 'torch.quantization.observer', 'torch.quantization.qconfig', 'torch.quantization.fake_quantize', 'torch.quantization.fuser_method_mappings', 'torch.quantization.fuse_modules', 'torch.quantization.stubs', 'torch.quantization.quant_type', 'torch.quantization.quantize_jit', 'torch.quantization.quantization_mappings', 'torch.quantization', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'torch.utils.dlpack', 'torch._masked', 'torch.return_types', 'torch', 'PIL._version', 'PIL', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageColor', 'PIL.features', 'PIL._imagingft', 'PIL.ImageFont', 'PIL.ImageDraw', 'torchvision.utils', 'torchvision._internally_replaced_utils', 'torchvision.extension', 'torchvision.io._load_gpu_decoder', 'fractions', 'torchvision.io._video_opt', 'torchvision.io.image', 'torchvision.io.video', 'torchvision.io', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', '_cffi_backend', '_brotli.lib', '_brotli', 'brotli._brotli', 'brotli.brotli', 'brotli', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'urllib3.connection', 'mimetypes', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'requests.exceptions', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.assets', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'chardet.compat', 'chardet.enums', 'chardet.charsetprober', 'chardet.charsetgroupprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.escprober', 'chardet.latin1prober', 'chardet.mbcssm', 'chardet.utf8prober', 'chardet.mbcharsetprober', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.chardistribution', 'chardet.jpcntx', 'chardet.sjisprober', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.mbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.sbcsgroupprober', 'chardet.universaldetector', 'chardet.version', 'chardet', 'requests.__version__', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'http.cookiejar', 'http.cookies', 'requests.compat', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'requests.utils', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'torch.utils.model_zoo', 'torchvision.datasets.utils', 'torchvision.datasets.vision', 'torchvision.datasets._optical_flow', 'torchvision.datasets.caltech', '_csv', 'csv', 'torchvision.datasets.celeba', 'torchvision.datasets.cifar', 'torchvision.datasets.cityscapes', 'torchvision.datasets.clevr', 'torchvision.datasets.coco', 'torchvision.datasets.folder', 'torchvision.datasets.country211', 'torchvision.datasets.dtd', 'torchvision.datasets.eurosat', 'PIL.ImageOps', 'PIL.ImageFilter', 'PIL.ImageStat', 'PIL.ImageEnhance', 'torchvision.transforms.functional_pil', 'torchvision.transforms.functional_tensor', 'torchvision.transforms.functional', 'torchvision.transforms.transforms', 'torchvision.transforms.autoaugment', 'torchvision.transforms', 'torchvision.datasets.fakedata', 'torchvision.datasets.fer2013', 'torchvision.datasets.fgvc_aircraft', 'html.entities', 'html', '_markupbase', 'html.parser', 'torchvision.datasets.flickr', 'torchvision.datasets.flowers102', 'torchvision.datasets.food101', 'torchvision.datasets.gtsrb', 'torchvision.datasets.video_utils', 'torchvision.datasets.hmdb51', 'torchvision.datasets.imagenet', 'torchvision.datasets.inaturalist', 'torchvision.datasets.kinetics', 'torchvision.datasets.kitti', 'torchvision.datasets.lfw', 'torchvision.datasets.lsun', 'torchvision.datasets.mnist', 'torchvision.datasets.omniglot', 'torchvision.datasets.oxford_iiit_pet', 'torchvision.datasets.pcam', 'torchvision.datasets.phototour', 'torchvision.datasets.places365', 'torchvision.datasets.rendered_sst2', 'torchvision.datasets.sbd', 'torchvision.datasets.sbu', 'torchvision.datasets.semeion', 'torchvision.datasets.stanford_cars', 'torchvision.datasets.stl10', 'torchvision.datasets.sun397', 'torchvision.datasets.svhn', 'torchvision.datasets.ucf101', 'torchvision.datasets.usps', 'torchvision.datasets.voc', 'torchvision.datasets.widerface', 'torchvision.datasets', 'torchvision.models.alexnet', 'torchvision.ops._register_onnx_ops', 'torchvision.ops._box_convert', 'torchvision.ops.boxes', 'torchvision.ops.deform_conv', 'torchvision.ops.feature_pyramid_network', 'torchvision.ops.focal_loss', 'torchvision.ops.giou_loss', 'torchvision.ops.misc', 'torch.fx._compatibility', 'torch.fx.immutable_collections', 'torch.fx.operator_schemas', 'torch.fx.node', 'torch.fx._pytree', 'torch.fx.graph', 'torch.fx.graph_module', 'torch.fx.proxy', 'torch.fx._symbolic_trace', 'torch.fx.interpreter', 'torch.fx.subgraph_rewriter', 'torch.fx', 'torchvision.ops._utils', 'torchvision.ops.roi_align', 'torchvision.ops.poolers', 'torchvision.ops.ps_roi_align', 'torchvision.ops.ps_roi_pool', 'torchvision.ops.roi_pool', 'torchvision.ops.stochastic_depth', 'torch.onnx.utils', 'torch.onnx.symbolic_helper', 'torch.onnx.symbolic_opset9', 'torch.onnx.symbolic_opset11', 'torch.onnx.symbolic_opset7', 'torch.onnx.symbolic_opset8', 'torch.onnx.symbolic_opset10', 'torch.onnx.symbolic_opset12', 'torch.onnx.symbolic_opset13', 'torch.onnx.symbolic_opset14', 'torch.onnx.symbolic_opset15', 'torch.onnx.symbolic_registry', 'torchvision.ops', 'torchvision.models.convnext', 'torchvision.models.resnet', 'torchvision.models.vgg', 'torchvision.models.squeezenet', 'torchvision.models.inception', 'torch.utils.checkpoint', 'torchvision.models.densenet', 'torchvision.models.googlenet', 'torchvision.models._utils', 'torchvision.models.mobilenetv2', 'torchvision.models.mobilenetv3', 'torchvision.models.mobilenet', 'torchvision.models.mnasnet', 'torchvision.models.shufflenetv2', 'torchvision.models.efficientnet', 'torchvision.models.regnet', 'torchvision.models.vision_transformer', 'torchvision.models.detection._utils', 'torchvision.models.detection.image_list', 'torchvision.models.detection.anchor_utils', 'torchvision.models.detection.backbone_utils', 'torchvision.models.detection.generalized_rcnn', 'torchvision.models.detection.roi_heads', 'torchvision.models.detection.rpn', 'torchvision.models.detection.transform', 'torchvision.models.detection.faster_rcnn', 'torchvision.models.detection.mask_rcnn', 'torchvision.models.detection.keypoint_rcnn', 'torchvision.models.detection.retinanet', 'torchvision.models.detection.ssd', 'torchvision.models.detection.ssdlite', 'torchvision.models.detection.fcos', 'torchvision.models.detection', 'torchvision.models.feature_extraction', 'torchvision.models.optical_flow._utils', 'torchvision.models.optical_flow.raft', 'torchvision.models.optical_flow', 'torchvision.models.quantization.utils', 'torchvision.models.quantization.mobilenetv2', 'torchvision.models.quantization.mobilenetv3', 'torchvision.models.quantization.mobilenet', 'torchvision.models.quantization.resnet', 'torchvision.models.quantization.googlenet', 'torchvision.models.quantization.inception', 'torchvision.models.quantization.shufflenetv2', 'torchvision.models.quantization', 'torchvision.models.segmentation._utils', 'torchvision.models.segmentation.fcn', 'torchvision.models.segmentation.deeplabv3', 'torchvision.models.segmentation.lraspp', 'torchvision.models.segmentation', 'torchvision.models.video.resnet', 'torchvision.models.video', 'torchvision.models', 'torchvision.version', 'torchvision', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build._check_build', 'sklearn.__check_build', 'pkgutil', 'timeit', 'sklearn.utils.murmurhash', 'sysconfig', 'pydoc', 'joblib.hashing', 'pprint', 'joblib.disk', 'joblib.logger', 'joblib.func_inspect', 'joblib.backports', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.numpy_pickle', 'joblib._store_backends', 'joblib.memory', '_uuid', 'uuid', 'joblib._multiprocessing_helpers', 'joblib._deprecated_my_exceptions', 'joblib.my_exceptions', 'mmap', 'joblib.externals', 'joblib.externals.loky._base', 'runpy', 'multiprocessing.spawn', 'multiprocessing.popen_spawn_win32', 'joblib.externals.loky.backend.compat_win32', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.context', 'multiprocessing.synchronize', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend._win_reduction', 'joblib.externals.cloudpickle.compat', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle_fast', 'joblib.externals.cloudpickle', 'joblib.externals.loky.backend.reduction', 'multiprocessing.queues', 'joblib.externals.loky.backend.queues', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'joblib.externals.loky.backend.utils', 'concurrent.futures.process', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky', 'joblib.externals.loky.backend.spawn', 'joblib.externals.loky.backend.resource_tracker', 'joblib._memmapping_reducer', 'multiprocessing.pool', 'joblib.pool', 'joblib.executor', 'joblib._parallel_backends', 'joblib.parallel', 'joblib', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'sklearn.utils.deprecation', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', 'imp', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'encodings.cp437', 'pkg_resources', 'sklearn.utils.fixes', 'sklearn.exceptions', 'sklearn.utils.validation', 'sklearn.utils.class_weight', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils', 'sklearn.utils._tags', 'sklearn.base', 'sklearn.utils._openmp_helpers', 'sklearn.utils._show_versions', 'sklearn', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.extmath', 'sklearn.utils.sparsefuncs', 'sklearn.utils._random', 'sklearn.utils._seq_dataset', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.utils._encode', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._data', 'array', 'sklearn.utils.multiclass', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.preprocessing', 'sklearn.linear_model._base', 'sklearn.linear_model._bayes', 'sklearn.utils._cython_blas', 'sklearn.utils.arrayfuncs', 'sklearn.model_selection._split', 'sklearn.utils.metaestimators', 'sklearn.metrics._base', 'sklearn.metrics._ranking', 'sklearn.metrics._classification', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._supervised', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.pairwise', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics.cluster', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.utils.stats', 'sklearn.metrics._regression', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.det_curve', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.metrics', 'sklearn.model_selection._validation', 'sklearn.utils.random', 'sklearn.model_selection._search', 'sklearn.model_selection', 'sklearn.linear_model._least_angle', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._coordinate_descent', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._glm.glm', 'sklearn.linear_model._glm', 'sklearn.linear_model._huber', 'sklearn.utils._weight_vector', 'sklearn.linear_model._sgd_fast', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._sag', 'sklearn.linear_model._ridge', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._base', 'sklearn.svm._classes', 'sklearn.svm._bounds', 'sklearn.svm', 'sklearn.linear_model._logistic', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.linear_model', 'model', 'matplotlib', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver']
[2022-09-14 08:33:37,418] {__init__.py:241} DEBUG - CACHEDIR=C:\Users\dranh\.matplotlib
[2022-09-14 08:33:37,426] {font_manager.py:1436} DEBUG - Using fontManager instance from C:\Users\dranh\.matplotlib\fontlist-v330.json
[2022-09-14 08:33:37,752] {pyplot.py:289} DEBUG - Loaded backend qt5agg version unknown.
[2022-09-14 08:33:37,752] {pyplot.py:289} DEBUG - Loaded backend Qt5Agg version unknown.
[2022-09-14 08:33:37,988] {font_manager.py:1334} DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
[2022-09-14 08:33:37,988] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:37,988] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,000] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,001] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,001] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,001] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[2022-09-14 08:33:38,002] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
[2022-09-14 08:33:38,002] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,003] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,004] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,006] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,006] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,007] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,007] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,007] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,008] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[2022-09-14 08:33:38,009] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,009] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,009] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,010] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,010] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,011] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,011] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,012] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[2022-09-14 08:33:38,012] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,013] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
[2022-09-14 08:33:38,013] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,013] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,014] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,014] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,016] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,018] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,018] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[2022-09-14 08:33:38,020] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,021] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,022] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,023] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,024] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,025] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,025] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,028] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,029] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,029] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,030] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,031] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,031] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,031] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,032] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,033] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,035] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,035] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
[2022-09-14 08:33:38,036] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,036] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,036] {font_manager.py:1346} DEBUG - findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,037] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,037] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,038] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,038] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,039] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,040] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
[2022-09-14 08:33:38,041] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,041] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,042] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,043] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,043] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,044] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
[2022-09-14 08:33:38,045] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,046] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,049] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,050] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,050] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,051] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,051] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,052] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,053] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,054] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,056] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
[2022-09-14 08:33:38,056] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
[2022-09-14 08:33:38,057] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,057] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,058] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,059] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,059] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,059] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,060] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,062] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
[2022-09-14 08:33:38,063] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,064] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,064] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,065] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,065] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,066] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,066] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,066] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,067] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,069] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,070] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
[2022-09-14 08:33:38,070] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
[2022-09-14 08:33:38,071] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,071] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,072] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,072] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,072] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,073] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,074] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,075] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,077] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,079] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,079] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,080] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,080] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,082] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cascadia Code' (CascadiaCode.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,083] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,084] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,084] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,085] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,085] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,085] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,086] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,086] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,087] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,087] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,088] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,089] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,090] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,091] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,091] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,091] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
[2022-09-14 08:33:38,092] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
[2022-09-14 08:33:38,092] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,092] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
[2022-09-14 08:33:38,093] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,094] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,094] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,095] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,096] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,097] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,097] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,098] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,099] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,099] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,100] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,102] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,104] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,105] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
[2022-09-14 08:33:38,105] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
[2022-09-14 08:33:38,105] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,106] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,106] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,107] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,108] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,108] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,108] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,109] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,111] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Sitka' (SitkaVF.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,111] {font_manager.py:1346} DEBUG - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,112] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,112] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,112] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
[2022-09-14 08:33:38,113] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,113] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,114] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,114] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
[2022-09-14 08:33:38,114] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
[2022-09-14 08:33:38,115] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,116] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,117] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,118] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,118] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,119] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,119] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe Fluent Icons' (SegoeIcons.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,120] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
[2022-09-14 08:33:38,120] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,120] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,121] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,121] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,122] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,122] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,123] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,124] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,125] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,125] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,126] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,126] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,127] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,127] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,128] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,128] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,128] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,129] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,130] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,131] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,132] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,133] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,134] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,135] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,135] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,136] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,136] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,137] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,139] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,139] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,139] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,140] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,140] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,143] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,145] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
[2022-09-14 08:33:38,146] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,146] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,146] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,147] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,147] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,148] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,148] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,148] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,149] {font_manager.py:1346} DEBUG - findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,149] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,149] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
[2022-09-14 08:33:38,150] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,151] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,152] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,153] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,153] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,153] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,154] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,154] {font_manager.py:1346} DEBUG - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,154] {font_manager.py:1346} DEBUG - findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,155] {font_manager.py:1346} DEBUG - findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
[2022-09-14 08:33:38,155] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
[2022-09-14 08:33:38,156] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,156] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,157] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,158] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,160] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,160] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,161] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
[2022-09-14 08:33:38,161] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,161] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,162] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,162] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,163] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,163] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,164] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,164] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,166] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
[2022-09-14 08:33:38,166] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
[2022-09-14 08:33:38,167] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,167] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,167] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
[2022-09-14 08:33:38,168] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,168] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
[2022-09-14 08:33:38,169] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,169] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,169] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,172] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,173] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,174] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,174] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,174] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
[2022-09-14 08:33:38,175] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,175] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,176] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,176] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
[2022-09-14 08:33:38,176] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
[2022-09-14 08:33:38,177] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,177] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,178] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,178] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,179] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
[2022-09-14 08:33:38,180] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,181] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,181] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,181] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,182] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
[2022-09-14 08:33:38,183] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,184] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,184] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
[2022-09-14 08:33:38,184] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
[2022-09-14 08:33:38,185] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,186] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,187] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
[2022-09-14 08:33:38,188] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,188] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,188] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Sitka' (SitkaVF-Italic.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,189] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,189] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,189] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,190] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,190] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,190] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,191] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,191] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,192] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,193] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
[2022-09-14 08:33:38,194] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,195] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,195] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,196] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,196] {font_manager.py:1346} DEBUG - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,197] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,198] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,198] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
[2022-09-14 08:33:38,198] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,200] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
[2022-09-14 08:33:38,201] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,201] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,202] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,202] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,203] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,203] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,204] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,207] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
[2022-09-14 08:33:38,208] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,209] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
[2022-09-14 08:33:38,210] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,210] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,211] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,211] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,212] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,212] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,214] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,215] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,216] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,216] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,217] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,217] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,217] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,218] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,218] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,219] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,219] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
[2022-09-14 08:33:38,220] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,221] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,222] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,222] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,223] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,223] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,223] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,224] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,225] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,225] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,226] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,226] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,227] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
[2022-09-14 08:33:38,228] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,229] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,229] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,230] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,230] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
[2022-09-14 08:33:38,231] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,231] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,231] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,232] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
[2022-09-14 08:33:38,232] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
[2022-09-14 08:33:38,232] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,233] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,233] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,234] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cascadia Mono' (CascadiaMono.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,236] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,236] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,236] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,237] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,237] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,238] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
[2022-09-14 08:33:38,238] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,240] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,241] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,242] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,243] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,244] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,244] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,244] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,245] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
[2022-09-14 08:33:38,245] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI Variable' (SegUIVar.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,245] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,246] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,246] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,247] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,247] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,248] {font_manager.py:1366} DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\dranh\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
[2022-09-14 08:33:38,300] {font_manager.py:1334} DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
[2022-09-14 08:33:38,301] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,302] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,302] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,303] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,304] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,304] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[2022-09-14 08:33:38,305] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
[2022-09-14 08:33:38,305] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,305] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,306] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,306] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,306] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,307] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,307] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,308] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,308] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[2022-09-14 08:33:38,309] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,310] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,311] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,311] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,311] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,313] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,314] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,314] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[2022-09-14 08:33:38,315] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,315] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
[2022-09-14 08:33:38,315] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,316] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,316] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,317] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,317] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,318] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,318] {font_manager.py:1346} DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[2022-09-14 08:33:38,318] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,319] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,319] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,320] {font_manager.py:1346} DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,320] {font_manager.py:1346} DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,320] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,321] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,321] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,322] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,322] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,323] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,323] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,324] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,325] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,325] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,326] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,326] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,327] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
[2022-09-14 08:33:38,327] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,328] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,328] {font_manager.py:1346} DEBUG - findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,330] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,330] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,331] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,332] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,332] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,332] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
[2022-09-14 08:33:38,333] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,333] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,333] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,334] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,334] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,335] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
[2022-09-14 08:33:38,335] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,336] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,336] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,337] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,337] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,338] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,338] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,339] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,339] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,339] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,340] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
[2022-09-14 08:33:38,340] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
[2022-09-14 08:33:38,340] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,341] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,341] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,342] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,342] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,342] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,343] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,343] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
[2022-09-14 08:33:38,344] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,344] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,346] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,346] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,347] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,347] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,347] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,348] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,348] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,348] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,349] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
[2022-09-14 08:33:38,349] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
[2022-09-14 08:33:38,350] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,350] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,351] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,352] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,353] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,353] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,354] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,354] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,354] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,355] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,355] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,356] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,356] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,357] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cascadia Code' (CascadiaCode.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,358] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,358] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,359] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,359] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,360] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,360] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,360] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,361] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,361] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,362] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,362] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,362] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,363] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,363] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,363] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,364] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
[2022-09-14 08:33:38,364] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
[2022-09-14 08:33:38,365] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,366] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
[2022-09-14 08:33:38,366] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,366] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,367] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,367] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,368] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,368] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,368] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,369] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,369] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,369] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,370] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,370] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,371] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,371] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
[2022-09-14 08:33:38,371] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
[2022-09-14 08:33:38,372] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,373] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,373] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,374] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,375] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,375] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,376] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,376] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,376] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Sitka' (SitkaVF.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,377] {font_manager.py:1346} DEBUG - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,377] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,377] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,378] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
[2022-09-14 08:33:38,378] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,379] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,379] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,380] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
[2022-09-14 08:33:38,380] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
[2022-09-14 08:33:38,381] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,381] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,382] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,383] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,383] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,384] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,384] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe Fluent Icons' (SegoeIcons.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,385] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
[2022-09-14 08:33:38,385] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,386] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,386] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,387] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,387] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,388] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,388] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,389] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,389] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,390] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,390] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,390] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,391] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,391] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,392] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,392] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,392] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,393] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,393] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,394] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,394] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,394] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,395] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,395] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,396] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,396] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,397] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,397] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,397] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,398] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,399] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,399] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,400] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,400] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,401] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
[2022-09-14 08:33:38,403] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,403] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,404] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,404] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,405] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,405] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,406] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,406] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,407] {font_manager.py:1346} DEBUG - findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,407] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,408] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
[2022-09-14 08:33:38,408] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,409] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,409] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,409] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,410] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,410] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,411] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,411] {font_manager.py:1346} DEBUG - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,412] {font_manager.py:1346} DEBUG - findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,413] {font_manager.py:1346} DEBUG - findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
[2022-09-14 08:33:38,413] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
[2022-09-14 08:33:38,414] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,416] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,416] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,417] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,417] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,418] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,418] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
[2022-09-14 08:33:38,419] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,419] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,420] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,420] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,421] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,421] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,422] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,422] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,423] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
[2022-09-14 08:33:38,423] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
[2022-09-14 08:33:38,423] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,424] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,424] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
[2022-09-14 08:33:38,425] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,425] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
[2022-09-14 08:33:38,425] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,426] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,426] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,427] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,427] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,428] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,428] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,429] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
[2022-09-14 08:33:38,429] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,430] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,430] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,430] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
[2022-09-14 08:33:38,431] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
[2022-09-14 08:33:38,431] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,431] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,432] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,434] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,434] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
[2022-09-14 08:33:38,435] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,435] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,436] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,436] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,437] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
[2022-09-14 08:33:38,437] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,438] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,438] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
[2022-09-14 08:33:38,438] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
[2022-09-14 08:33:38,439] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,439] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,440] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
[2022-09-14 08:33:38,440] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,441] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,441] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Sitka' (SitkaVF-Italic.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,442] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,443] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,443] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,443] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,444] {font_manager.py:1346} DEBUG - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,444] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,445] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,445] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,446] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,447] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
[2022-09-14 08:33:38,448] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,448] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,449] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,450] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,451] {font_manager.py:1346} DEBUG - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,451] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,455] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,456] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
[2022-09-14 08:33:38,457] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,457] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
[2022-09-14 08:33:38,458] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,458] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,459] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,459] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,459] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,460] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,460] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,461] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
[2022-09-14 08:33:38,461] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,462] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
[2022-09-14 08:33:38,462] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,463] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,463] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
[2022-09-14 08:33:38,464] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,464] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,465] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,465] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,465] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,467] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,468] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,468] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,469] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,469] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,470] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,470] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,470] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,471] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
[2022-09-14 08:33:38,471] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,471] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,472] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,472] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,472] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,473] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,473] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,474] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,474] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,475] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,475] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,476] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,476] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
[2022-09-14 08:33:38,477] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,477] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,478] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,478] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,478] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
[2022-09-14 08:33:38,479] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,479] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,479] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,480] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
[2022-09-14 08:33:38,480] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
[2022-09-14 08:33:38,481] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,481] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,481] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,482] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cascadia Mono' (CascadiaMono.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,483] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,484] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,485] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
[2022-09-14 08:33:38,485] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,486] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
[2022-09-14 08:33:38,486] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
[2022-09-14 08:33:38,487] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,487] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,487] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,488] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,488] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,489] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,489] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,490] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,491] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
[2022-09-14 08:33:38,491] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Segoe UI Variable' (SegUIVar.ttf) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,492] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,492] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
[2022-09-14 08:33:38,493] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
[2022-09-14 08:33:38,493] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
[2022-09-14 08:33:38,494] {font_manager.py:1346} DEBUG - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
[2022-09-14 08:33:38,494] {font_manager.py:1366} DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\dranh\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
[2022-09-14 08:33:47,462] {evaluation.py:58} INFO - DeltaE 2000: 4.85, MSE= 89.26, MAE= 7.71, DeltaE 76= 5.51

[2022-09-14 08:33:47,462] {evaluation.py:79} INFO - 2/10
[2022-09-14 08:33:47,471] {evaluation.py:29} INFO - RenderedWB_Set1/Canon600D_Indoor_Scene_14_2500_D_CS
[2022-09-14 08:34:30,058] {evaluation.py:58} INFO - DeltaE 2000: 4.03, MSE= 79.13, MAE= 4.89, DeltaE 76= 5.87

[2022-09-14 08:34:30,068] {evaluation.py:79} INFO - 3/10
[2022-09-14 08:34:30,069] {evaluation.py:29} INFO - RenderedWB_Set1/NikonD40_0008_S_A4
[2022-09-14 08:34:44,426] {evaluation.py:58} INFO - DeltaE 2000: 6.31, MSE= 103.39, MAE= 2.80, DeltaE 76= 7.01

[2022-09-14 08:34:44,427] {evaluation.py:79} INFO - 4/10
[2022-09-14 08:34:44,427] {evaluation.py:29} INFO - RenderedWB_Set1/FujifilmXM1_Indoor_Scene_03_3500_D_V
[2022-09-14 08:34:56,391] {evaluation.py:58} INFO - DeltaE 2000: 6.02, MSE= 256.13, MAE= 7.74, DeltaE 76= 10.03

[2022-09-14 08:34:56,391] {evaluation.py:79} INFO - 5/10
[2022-09-14 08:34:56,405] {evaluation.py:29} INFO - RenderedWB_Set1/Canon600D_0158_C_F
[2022-09-14 08:35:09,268] {evaluation.py:58} INFO - DeltaE 2000: 8.47, MSE= 245.47, MAE= 5.52, DeltaE 76= 12.53

[2022-09-14 08:35:09,268] {evaluation.py:79} INFO - 6/10
[2022-09-14 08:35:09,268] {evaluation.py:29} INFO - RenderedWB_Set1/IMG_0401_C_FF
[2022-09-14 08:35:27,988] {evaluation.py:58} INFO - DeltaE 2000: 2.62, MSE= 10.41, MAE= 3.22, DeltaE 76= 2.35

[2022-09-14 08:35:27,988] {evaluation.py:79} INFO - 7/10
[2022-09-14 08:35:27,988] {evaluation.py:29} INFO - RenderedWB_Set1/IMG_0785_S_CS
[2022-09-14 08:35:34,324] {evaluation.py:58} INFO - DeltaE 2000: 2.65, MSE= 17.40, MAE= 3.32, DeltaE 76= 2.63

[2022-09-14 08:35:34,324] {evaluation.py:79} INFO - 8/10
[2022-09-14 08:35:34,324] {evaluation.py:29} INFO - RenderedWB_Set1/Canon1DsMkIII_0153_S_FF
[2022-09-14 08:35:47,682] {evaluation.py:58} INFO - DeltaE 2000: 4.16, MSE= 65.29, MAE= 2.79, DeltaE 76= 4.76

[2022-09-14 08:35:47,682] {evaluation.py:79} INFO - 9/10
[2022-09-14 08:35:47,697] {evaluation.py:29} INFO - RenderedWB_Set1/Canon600D_0110_T_CS
[2022-09-14 08:35:59,181] {evaluation.py:58} INFO - DeltaE 2000: 9.15, MSE= 75.36, MAE= 3.83, DeltaE 76= 9.01

[2022-09-14 08:35:59,181] {evaluation.py:79} INFO - 10/10
[2022-09-14 08:35:59,181] {evaluation.py:29} INFO - RenderedWB_Set1/Canon1DsMkIII_0226_T_L
[2022-09-14 08:36:12,458] {evaluation.py:58} INFO - DeltaE 2000: 9.49, MSE= 217.83, MAE= 6.15, DeltaE 76= 12.79

[2022-09-14 08:36:12,459] {evaluation.py:93} INFO - [AVG] DeltaE 2000: 5.78, MSE= 115.97, MAE= 4.80, DeltaE 76= 7.25

